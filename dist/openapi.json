{
  "components": {
    "schemas": {
      "ApplyRequest": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/ApplyRequest.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "dryRun": {
            "type": "boolean"
          },
          "yaml": {
            "type": "string"
          }
        },
        "required": [
          "yaml",
          "dryRun"
        ],
        "type": "object"
      },
      "AuditDTO": {
        "additionalProperties": false,
        "properties": {
          "action": {
            "type": "string"
          },
          "actor": {
            "type": "string"
          },
          "afterJson": {},
          "appliedAt": {
            "format": "date-time",
            "type": "string"
          },
          "beforeJson": {},
          "changeCount": {
            "format": "int64",
            "type": "integer"
          },
          "columnName": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "summary": {
            "type": "string"
          },
          "tableName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "actor",
          "action",
          "tableName",
          "columnName",
          "appliedAt",
          "beforeJson",
          "afterJson",
          "changeCount"
        ],
        "type": "object"
      },
      "AuditDiffOutputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/AuditDiffOutputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "added": {
            "format": "int64",
            "type": "integer"
          },
          "removed": {
            "format": "int64",
            "type": "integer"
          },
          "unified": {
            "type": "string"
          }
        },
        "required": [
          "unified",
          "added",
          "removed"
        ],
        "type": "object"
      },
      "AuditListOutputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/AuditListOutputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AuditDTO"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "nextCursor": {
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "AuditLog": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/AuditLog.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "actor": {
            "type": "string"
          },
          "appliedAt": {
            "format": "date-time",
            "type": "string"
          },
          "columnName": {
            "type": "string"
          },
          "diffUrl": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "summary": {
            "type": "string"
          },
          "tableName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "actor",
          "action",
          "tableName",
          "columnName",
          "appliedAt",
          "summary",
          "diffUrl"
        ],
        "type": "object"
      },
      "CapsOutBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/CapsOutBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "capabilities": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object"
          }
        },
        "required": [
          "capabilities"
        ],
        "type": "object"
      },
      "CreateDatabase": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/CreateDatabase.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "driver": {
            "type": "string"
          },
          "dsn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "driver",
          "dsn"
        ],
        "type": "object"
      },
      "CreateRoleInputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/CreateRoleInputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "CreateUserInputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/CreateUserInputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "type": "object"
      },
      "CustomField": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/CustomField.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "column": {
            "type": "string"
          },
          "db_id": {
            "format": "int64",
            "type": "integer"
          },
          "defaultValue": {
            "type": "string"
          },
          "display": {
            "$ref": "#/components/schemas/DisplaySettings"
          },
          "hasDefault": {
            "type": "boolean"
          },
          "nullable": {
            "type": "boolean"
          },
          "table": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "unique": {
            "type": "boolean"
          },
          "validator": {
            "type": "string"
          },
          "validator_params": {
            "additionalProperties": {},
            "type": "object"
          }
        },
        "required": [
          "table",
          "column",
          "type",
          "display"
        ],
        "type": "object"
      },
      "Database": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/Database.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "driver": {
            "type": "string"
          },
          "dsn": {
            "type": "string"
          },
          "dsnEnc": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "driver",
          "dsn",
          "dsnEnc",
          "createdAt"
        ],
        "type": "object"
      },
      "DisplayMeta": {
        "additionalProperties": false,
        "properties": {
          "labelKey": {
            "type": "string"
          },
          "options": {
            "items": {
              "$ref": "#/components/schemas/DisplayOption"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "placeholderKey": {
            "type": "string"
          },
          "widget": {
            "type": "string"
          },
          "widget_config": {}
        },
        "required": [
          "labelKey",
          "widget",
          "placeholderKey"
        ],
        "type": "object"
      },
      "DisplayOption": {
        "additionalProperties": false,
        "properties": {
          "labelKey": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value",
          "labelKey"
        ],
        "type": "object"
      },
      "DisplaySettings": {
        "additionalProperties": false,
        "properties": {
          "labelKey": {
            "type": "string"
          },
          "placeholderKey": {
            "type": "string"
          },
          "widget": {
            "type": "string"
          },
          "widget_config": {}
        },
        "required": [
          "widget"
        ],
        "type": "object"
      },
      "ErrorDetail": {
        "additionalProperties": false,
        "properties": {
          "location": {
            "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            "type": "string"
          },
          "message": {
            "description": "Error message text",
            "type": "string"
          },
          "value": {
            "description": "The value at the given location"
          }
        },
        "type": "object"
      },
      "ErrorModel": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/ErrorModel.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "examples": [
              "Property foo is required but is missing."
            ],
            "type": "string"
          },
          "errors": {
            "description": "Optional list of individual error details",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "examples": [
              "https://example.com/error-log/abc123"
            ],
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "examples": [
              400
            ],
            "format": "int64",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
            "examples": [
              "Bad Request"
            ],
            "type": "string"
          },
          "type": {
            "default": "about:blank",
            "description": "A URI reference to human-readable documentation for the error.",
            "examples": [
              "https://example.com/errors/example"
            ],
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FieldMeta": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/FieldMeta.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "ColumnName": {
            "type": "string"
          },
          "DataType": {
            "type": "string"
          },
          "Display": {
            "$ref": "#/components/schemas/DisplayMeta"
          },
          "Nullable": {
            "type": "boolean"
          },
          "Placeholder": {
            "type": "string"
          },
          "TableName": {
            "type": "string"
          },
          "Unique": {
            "type": "boolean"
          },
          "Validator": {
            "type": "string"
          },
          "dbId": {
            "format": "int64",
            "type": "integer"
          },
          "defaultValue": {
            "type": "string"
          },
          "hasDefault": {
            "type": "boolean"
          },
          "validatorParams": {
            "additionalProperties": {},
            "type": "object"
          }
        },
        "required": [
          "dbId",
          "TableName",
          "ColumnName",
          "DataType",
          "Placeholder",
          "Display",
          "Validator",
          "Nullable",
          "Unique",
          "hasDefault"
        ],
        "type": "object"
      },
      "ListValidatorsOutBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/ListValidatorsOutBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "type": "integer"
          },
          "validators": {
            "items": {
              "$ref": "#/components/schemas/Validator"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "validators",
          "total"
        ],
        "type": "object"
      },
      "LoginBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/LoginBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "type": "object"
      },
      "Plugin": {
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "Policy": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/Policy.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "required": [
          "path",
          "method"
        ],
        "type": "object"
      },
      "Role": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/Role.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "members": {
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "policies": {
            "items": {
              "$ref": "#/components/schemas/Policy"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "members"
        ],
        "type": "object"
      },
      "RoleMembersInputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/RoleMembersInputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "userIds": {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "userIds"
        ],
        "type": "object"
      },
      "RoleMembersOutputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/RoleMembersOutputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "roleId": {
            "format": "int64",
            "type": "integer"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserBrief"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "roleId",
          "users"
        ],
        "type": "object"
      },
      "ScanResult": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/ScanResult.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "inserted": {
            "format": "int64",
            "type": "integer"
          },
          "skipped": {
            "format": "int64",
            "type": "integer"
          },
          "skippedList": {
            "items": {
              "$ref": "#/components/schemas/SkipInfo"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "total": {
            "format": "int64",
            "type": "integer"
          },
          "updated": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "total",
          "inserted",
          "updated",
          "skipped"
        ],
        "type": "object"
      },
      "SkipInfo": {
        "additionalProperties": false,
        "properties": {
          "column": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "table": {
            "type": "string"
          }
        },
        "required": [
          "table",
          "column",
          "reason"
        ],
        "type": "object"
      },
      "Snapshot": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/Snapshot.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "semver": {
            "type": "string"
          },
          "takenAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "semver",
          "takenAt"
        ],
        "type": "object"
      },
      "SnapshotCreateRequest": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/SnapshotCreateRequest.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "bump": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "semver": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SnapshotRequest": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/SnapshotRequest.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "dest": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TableInfo": {
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "qualified": {
            "type": "string"
          },
          "schema": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "qualified"
        ],
        "type": "object"
      },
      "TablesOutputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/TablesOutputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TableInfo"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "Target": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/Target.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "connMaxIdleMs": {
            "format": "int64",
            "type": "integer"
          },
          "connMaxLifeMs": {
            "format": "int64",
            "type": "integer"
          },
          "driver": {
            "type": "string"
          },
          "dsn": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "maxIdleConns": {
            "format": "int64",
            "type": "integer"
          },
          "maxOpenConns": {
            "format": "int64",
            "type": "integer"
          },
          "schema": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "key",
          "driver",
          "dsn",
          "labels"
        ],
        "type": "object"
      },
      "TargetInput": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/TargetInput.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "connMaxIdleMs": {
            "format": "int64",
            "type": "integer"
          },
          "connMaxLifeMs": {
            "format": "int64",
            "type": "integer"
          },
          "driver": {
            "type": "string"
          },
          "dsn": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "maxIdleConns": {
            "format": "int64",
            "type": "integer"
          },
          "maxOpenConns": {
            "format": "int64",
            "type": "integer"
          },
          "schema": {
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "key",
          "driver",
          "dsn",
          "labels"
        ],
        "type": "object"
      },
      "TargetPatch": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/TargetPatch.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "connMaxIdleMs": {
            "format": "int64",
            "type": "integer"
          },
          "connMaxLifeMs": {
            "format": "int64",
            "type": "integer"
          },
          "driver": {
            "type": "string"
          },
          "dsn": {
            "type": "string"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "maxIdleConns": {
            "format": "int64",
            "type": "integer"
          },
          "maxOpenConns": {
            "format": "int64",
            "type": "integer"
          },
          "schema": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TargetsList": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/TargetsList.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "nextCursor": {
            "type": "string"
          }
        },
        "required": [
          "items"
        ],
        "type": "object"
      },
      "TokenResponse": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/TokenResponse.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "access_token",
          "expires_at"
        ],
        "type": "object"
      },
      "UpdateDBBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/UpdateDBBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "driver": {
            "type": "string"
          },
          "dsn": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "driver",
          "dsn"
        ],
        "type": "object"
      },
      "UploadPluginOutputHeaders": {
        "additionalProperties": false,
        "properties": {
          "XUploadedSize": {
            "type": "string"
          }
        },
        "required": [
          "XUploadedSize"
        ],
        "type": "object"
      },
      "UploadPluginResponse": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/UploadPluginResponse.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "widget": {
            "$ref": "#/components/schemas/WidgetDTO"
          }
        },
        "required": [
          "ok",
          "widget"
        ],
        "type": "object"
      },
      "User": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/User.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "tenant_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "tenant_id",
          "username",
          "roles",
          "created_at"
        ],
        "type": "object"
      },
      "UserBrief": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "roles": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username"
        ],
        "type": "object"
      },
      "UsersPage": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/UsersPage.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/UserBrief"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "page": {
            "format": "int64",
            "type": "integer"
          },
          "per_page": {
            "format": "int64",
            "type": "integer"
          },
          "total": {
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "total",
          "page",
          "per_page"
        ],
        "type": "object"
      },
      "Validator": {
        "additionalProperties": false,
        "properties": {
          "applies_to": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "params": {
            "additionalProperties": {},
            "type": "object"
          },
          "schema": {
            "additionalProperties": {},
            "type": "object"
          },
          "table_match": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "applies_to",
          "table_match",
          "params",
          "schema"
        ],
        "type": "object"
      },
      "VersionBodyOutputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/VersionBodyOutputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ],
        "type": "object"
      },
      "VersionOutputBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/VersionOutputBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "defaultKey": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version",
          "defaultKey"
        ],
        "type": "object"
      },
      "Widget": {
        "additionalProperties": false,
        "properties": {
          "capabilities": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "homepage": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "meta": {
            "additionalProperties": {},
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "version",
          "type",
          "scopes",
          "enabled",
          "updated_at"
        ],
        "type": "object"
      },
      "WidgetDTO": {
        "additionalProperties": false,
        "properties": {
          "capabilities": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "homepage": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "meta": {
            "additionalProperties": {},
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "tenant_scope": {
            "type": "string"
          },
          "tenants": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "version",
          "type",
          "scopes",
          "enabled",
          "tenant_scope",
          "tenants",
          "updated_at"
        ],
        "type": "object"
      },
      "WidgetItem": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/WidgetItem.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "capabilities": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "homepage": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "meta": {
            "additionalProperties": {},
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "tenant_scope": {
            "type": "string"
          },
          "tenants": {
            "items": {
              "type": "string"
            },
            "type": [
              "array",
              "null"
            ]
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "version",
          "type",
          "scopes",
          "enabled",
          "tenant_scope",
          "tenants",
          "updated_at"
        ],
        "type": "object"
      },
      "WidgetPatch": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/WidgetPatch.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "WidgetsOutBody": {
        "additionalProperties": false,
        "properties": {
          "$schema": {
            "description": "A URL to the JSON Schema for this object.",
            "examples": [
              "https://example.com/schemas/WidgetsOutBody.json"
            ],
            "format": "uri",
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "format": "int64",
            "type": "integer"
          },
          "widgets": {
            "items": {
              "$ref": "#/components/schemas/Widget"
            },
            "type": [
              "array",
              "null"
            ]
          }
        },
        "required": [
          "widgets",
          "total"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "title": "CustomField API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/admin/targets/": {
      "get": {
        "operationId": "get-admin-targets",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "label",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 50,
              "format": "int64",
              "maximum": 200,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetsList"
                }
              }
            },
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get admin targets"
      },
      "post": {
        "operationId": "post-admin-targets",
        "parameters": [
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Target"
                }
              }
            },
            "description": "Created",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post admin targets"
      }
    },
    "/admin/targets/version": {
      "get": {
        "operationId": "get-admin-targets-version",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionOutputBody"
                }
              }
            },
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get admin targets version"
      }
    },
    "/admin/targets/version/bump": {
      "post": {
        "operationId": "post-admin-targets-version-bump",
        "parameters": [
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionBodyOutputBody"
                }
              }
            },
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post admin targets version bump"
      }
    },
    "/admin/targets/{key}": {
      "delete": {
        "operationId": "delete-admin-targets-by-key",
        "parameters": [
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete admin targets by key"
      },
      "get": {
        "operationId": "get-admin-targets-by-key",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Target"
                }
              }
            },
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get admin targets by key"
      },
      "patch": {
        "operationId": "patch-admin-targets-by-key",
        "parameters": [
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Target"
                }
              }
            },
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Patch admin targets by key"
      },
      "put": {
        "operationId": "put-admin-targets-by-key",
        "parameters": [
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Target"
                }
              }
            },
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Put admin targets by key"
      }
    },
    "/admin/targets/{key}/default": {
      "post": {
        "operationId": "post-admin-targets-by-key-default",
        "parameters": [
          {
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Post admin targets by key default"
      }
    },
    "/v1/apply": {
      "post": {
        "operationId": "applyRegistry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Apply registry yaml",
        "tags": [
          "Registry"
        ]
      }
    },
    "/v1/audit-logs": {
      "get": {
        "operationId": "listAuditLogs",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "action",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "actor",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "table",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "column",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "min_changes",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "max_changes",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "minChanges",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "maxChanges",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditListOutputBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List audit logs",
        "tags": [
          "Audit"
        ]
      }
    },
    "/v1/audit-logs/{id}": {
      "get": {
        "operationId": "getAuditLogByID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get audit log by ID",
        "tags": [
          "Audit"
        ]
      }
    },
    "/v1/audit-logs/{id}/diff": {
      "get": {
        "operationId": "getAuditDiff",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditDiffOutputBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get unified diff for an audit log",
        "tags": [
          "Audit"
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Login",
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/me/capabilities": {
      "get": {
        "operationId": "meCapabilities",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapsOutBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get current user's capabilities",
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "operationId": "refresh",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Refresh token",
        "tags": [
          "Auth"
        ]
      }
    },
    "/v1/custom-fields": {
      "get": {
        "operationId": "listCustomFields",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "db_id",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "table",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FieldMeta"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List custom fields",
        "tags": [
          "CustomField"
        ]
      },
      "post": {
        "operationId": "createCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldMeta"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create custom field",
        "tags": [
          "CustomField"
        ]
      }
    },
    "/v1/custom-fields/validators": {
      "get": {
        "description": "Filter by column type and optionally db/table.",
        "operationId": "ListFieldValidators",
        "parameters": [
          {
            "description": "Database name",
            "explode": false,
            "in": "query",
            "name": "db",
            "schema": {
              "description": "Database name",
              "type": "string"
            }
          },
          {
            "description": "Table name",
            "explode": false,
            "in": "query",
            "name": "table",
            "schema": {
              "description": "Table name",
              "type": "string"
            }
          },
          {
            "description": "Column type (varchar,int,uuid,...)",
            "explode": false,
            "in": "query",
            "name": "type",
            "required": true,
            "schema": {
              "description": "Column type (varchar,int,uuid,...)",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListValidatorsOutBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List applicable validators for the given selection",
        "tags": [
          "CustomFields"
        ]
      }
    },
    "/v1/custom-fields/{id}": {
      "delete": {
        "operationId": "deleteCustomField",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete custom field",
        "tags": [
          "CustomField"
        ]
      },
      "put": {
        "operationId": "updateCustomField",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomField"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FieldMeta"
                }
              }
            },
            "description": "OK"
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Update custom field",
        "tags": [
          "CustomField"
        ]
      }
    },
    "/v1/databases": {
      "get": {
        "operationId": "listDatabases",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Database"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List monitored databases",
        "tags": [
          "Database"
        ]
      },
      "post": {
        "operationId": "createDatabase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDatabase"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Add monitored database",
        "tags": [
          "Database"
        ]
      }
    },
    "/v1/databases/{id}": {
      "delete": {
        "operationId": "deleteDatabase",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete monitored database",
        "tags": [
          "Database"
        ]
      },
      "put": {
        "operationId": "updateDatabase",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDBBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Update monitored database",
        "tags": [
          "Database"
        ]
      }
    },
    "/v1/databases/{id}/scan": {
      "post": {
        "operationId": "scanDatabase",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Scan monitored database",
        "tags": [
          "Database"
        ]
      }
    },
    "/v1/databases/{id}/tables": {
      "get": {
        "operationId": "listDbTables",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List tables in monitored database",
        "tags": [
          "Database"
        ]
      }
    },
    "/v1/metadata/tables": {
      "get": {
        "operationId": "listTables",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "db_id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TablesOutputBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List tables",
        "tags": [
          "Metadata"
        ]
      }
    },
    "/v1/metadata/widgets": {
      "get": {
        "operationId": "listWidgets",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "scope",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "q",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "If-Modified-Since",
            "schema": {
              "format": "date-time-http",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetsOutBody"
                }
              }
            },
            "description": "OK",
            "headers": {
              "ETag": {
                "schema": {
                  "type": "string"
                }
              },
              "Last-Modified": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List widgets",
        "tags": [
          "Metadata"
        ]
      }
    },
    "/v1/metadata/widgets/{id}": {
      "delete": {
        "operationId": "DeleteWidget",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete widget",
        "tags": [
          "Metadata"
        ]
      },
      "patch": {
        "operationId": "PatchWidget",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WidgetPatch"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetItem"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Patch widget",
        "tags": [
          "Metadata"
        ]
      }
    },
    "/v1/plugins": {
      "get": {
        "operationId": "listPlugins",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Plugin"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List plugins",
        "tags": [
          "Plugin"
        ]
      },
      "post": {
        "description": "Accepts multipart/form-data with a file field named 'file'.",
        "operationId": "UploadPlugin",
        "requestBody": {
          "content": {
            "multipart/form-data": {}
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadPluginResponse"
                }
              }
            },
            "description": "OK",
            "headers": {
              "Headers": {
                "schema": {
                  "$ref": "#/components/schemas/UploadPluginOutputHeaders"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Upload a plugin package (ZIP/TGZ)",
        "tags": [
          "Plugin"
        ]
      }
    },
    "/v1/rbac/roles": {
      "get": {
        "operationId": "listRoles",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Role"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List roles",
        "tags": [
          "RBAC"
        ]
      },
      "post": {
        "operationId": "createRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleInputBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create role",
        "tags": [
          "RBAC"
        ]
      }
    },
    "/v1/rbac/roles/{id}": {
      "delete": {
        "operationId": "deleteRole",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Delete role",
        "tags": [
          "RBAC"
        ]
      }
    },
    "/v1/rbac/roles/{id}/members": {
      "get": {
        "operationId": "getRoleMembers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleMembersOutputBody"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get role members",
        "tags": [
          "RBAC"
        ]
      },
      "put": {
        "operationId": "putRoleMembers",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleMembersInputBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Replace role members",
        "tags": [
          "RBAC"
        ]
      }
    },
    "/v1/rbac/roles/{id}/policies": {
      "delete": {
        "operationId": "deleteRolePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "method",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Delete role policy",
        "tags": [
          "RBAC"
        ]
      },
      "get": {
        "operationId": "getRolePolicies",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Policy"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List role policies",
        "tags": [
          "RBAC"
        ]
      },
      "post": {
        "operationId": "addRolePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Policy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Method": {
                "schema": {
                  "type": "string"
                }
              },
              "Path": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Add role policy",
        "tags": [
          "RBAC"
        ]
      }
    },
    "/v1/rbac/users": {
      "get": {
        "operationId": "listUsers",
        "parameters": [
          {
            "explode": false,
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "page",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "per_page",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "exclude_role_id",
            "schema": {
              "format": "int64",
              "type": "integer"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": false,
            "in": "query",
            "name": "order",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersPage"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List users",
        "tags": [
          "RBAC"
        ]
      },
      "post": {
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserInputBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Created"
          },
          "400": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "409": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create user",
        "tags": [
          "RBAC"
        ]
      }
    },
    "/v1/snapshot": {
      "post": {
        "operationId": "createSnapshot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Create registry snapshot",
        "tags": [
          "Registry"
        ]
      }
    },
    "/v1/snapshots": {
      "get": {
        "operationId": "listSnapshots",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Snapshot"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "List registry snapshots",
        "tags": [
          "Snapshot"
        ]
      },
      "post": {
        "operationId": "createSnapshotV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SnapshotCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Snapshot"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Create registry snapshot",
        "tags": [
          "Snapshot"
        ]
      }
    },
    "/v1/snapshots/{ver}": {
      "get": {
        "operationId": "getSnapshot",
        "parameters": [
          {
            "in": "path",
            "name": "ver",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/yaml": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Get snapshot YAML",
        "tags": [
          "Snapshot"
        ]
      }
    },
    "/v1/snapshots/{ver}/apply": {
      "post": {
        "operationId": "applySnapshot",
        "parameters": [
          {
            "in": "path",
            "name": "ver",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "summary": "Apply registry snapshot",
        "tags": [
          "Snapshot"
        ]
      }
    }
  }
}